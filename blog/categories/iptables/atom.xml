<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iptables | Sibilia octopress blog]]></title>
  <link href="http://Sibilia.github.com/blog/categories/iptables/atom.xml" rel="self"/>
  <link href="http://Sibilia.github.com/"/>
  <updated>2013-03-04T14:46:33+03:00</updated>
  <id>http://Sibilia.github.com/</id>
  <author>
    <name><![CDATA[Ilia Sibiryatkin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Перенаправление http]]></title>
    <link href="http://Sibilia.github.com/blog/2013/03/04/pierienapravlieniie-http/"/>
    <updated>2013-03-04T13:53:00+03:00</updated>
    <id>http://Sibilia.github.com/blog/2013/03/04/pierienapravlieniie-http</id>
    <content type="html"><![CDATA[<p>Возникла необходимость по наступлению определённого события временно перенаправлять http соединения на другой порт, где слушает nginx с заглушкой. Это легко можно сделать с помошью парочки правил в iptables. Приведу несколько основных моментов из bash скрипта.
Нам нужны две таблицы в новой цепочке: "nat" для непосредственно перенаправления и "filter" для сброса активных сессий. Фильтровать активные сессии необходимо потому, что в таблицу "nat", цепочки PREROUTING, поподают лишь tcp соединения с состоянием NEW. Активные tcp соединения живут примерно 2-3 минуты. Если это не критично, то можно обойтись без их фильтрации. Для этого просто не добавляем все правила в которых указана таблица "filter".
Для начала создадим новую цепочку. Это удобно тем что её можно очистить полностью, когда необходимо вернуть всё к изначальному состоянию.
<code>
iptables -t nat -N HTTP_REDIR
iptables -t filter -N HTTP_REDIR
</code></p>

<!-- more -->


<p>Теперь создадим два правила в цепочках PREROUTING и INPUT в которых будем направлять tcp в нашу цепочку. Эти правила не будут удаляться.
<code>
iptables -t nat -I PREROUTING -p tcp -j HTTP_REDIR
iptables -t filter -I INPUT -p tcp -j HTTP_REDIR
</code>
Теперь, если нам необходимо включить перенаправление, то добавляем правила в нашу цепочку:
<code>
iptables -t nat -A HTTP_REDIR -p tcp --dport 80 -j REDIRECT --to-port 20302
iptables -t filter -A HTTP_REDIR -p tcp --dport 80 -j REJECT --reject-with tcp-reset
</code>
Если необходимо перенаправлять к примеру ещё и https то можно вместо "--dport 80" указать "-m multiport --dports 80,443"
Чтобы убрать перенаправление, просто чистим нашу цепочку. И не забываем сбросить активные сессии на порт перенаправления.
<code>
iptables -t nat -F HTTP_REDIR
iptables -t filter -F HTTP_REDIR
iptables -t filter -A HTTP_REDIR -p tcp --dport 20302 -j REJECT --reject-with tcp-reset
</code>
Вот в принципе и всё, за всеми подробностями идём в маны iptables, написано там всё очень подробно.</p>
]]></content>
  </entry>
  
</feed>
